{"version":3,"sources":["reducers/cart.js","constants/ActionTypes.js","reducers/products.js","reducers/index.js","api/shop.js","actions/index.js","components/Header.js","components/Product.js","components/ProductItem.js","components/ProductsList.js","containers/ProductsContainer.js","containers/HomePage/HomePage.js","components/Cart.js","containers/CartContainer.js","containers/ProductsContainerFruits.js","containers/HomePage/HomePageFruit.js","components/checkout/AddressForm.js","components/checkout/PaymentForm.js","components/checkout/Review.js","components/checkout/Checkout.js","containers/ProductsContainerVegetable.js","containers/HomePage/HomePageVegetable.js","containers/App.js","index.js"],"names":["initialState","addedIds","quantityById","state","action","productId","type","indexOf","filter","id","console","log","qtyDiff","cart","products","inventory","combineReducers","byId","reduce","obj","product","visibleIds","map","getProduct","getVisibleProducts","getAddedIds","fromCart","getQuantity","fromProducts","getTotal","total","price","toFixed","getCartProducts","quantity","cb","timeout","setTimeout","_products","payload","addToCart","dispatch","getState","addToCartUnsafe","checkout","shop","useStyles","makeStyles","createStyles","root","flexGrow","paddingBottom","title","titleLink","color","textDecoration","appbar","position","background","connect","classes","className","AppBar","Container","Toolbar","Typography","variant","to","IconButton","component","Link","Badge","badgeContent","length","Product","image","description","quantitydatadata","category","CardMedia","CardContent","ProductItem","onAddToCartClicked","Card","aria-label","onClick","Grid","item","xs","key","HomePage","container","spacing","classname","Button","width","footerbar","top","bottom","align","cartCard","paddingTop","cartroot","Cart","removeFromCart","onCheckoutClicked","changeQty","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","index","scope","quantitydata","ButtonGroup","orientation","colSpan","href","qty","removeFromCartAction","val","HomePageFruit","AddressForm","Fragment","gutterBottom","sm","TextField","required","name","label","fullWidth","autoComplete","validators","errorMessages","helperText","FormControlLabel","control","Checkbox","value","PaymentForm","md","desc","addresses","payments","detail","theme","listItem","padding","fontWeight","marginTop","Review","List","disablePadding","ListItem","ListItemText","primary","secondary","join","direction","payment","Copyright","Date","getFullYear","appBar","layout","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","steps","items","React","useState","activeStep","setActiveStep","CssBaseline","Stepper","Step","StepLabel","step","Error","getStepContent","HomePageVegetable","middleware","thunk","persistedState","localStorage","getItem","JSON","parse","store","createStore","reducer","applyMiddleware","subscribe","setItem","stringify","receiveProducts","App","ThemeProvider","path","exact","CartPage","Checkout","render","document","getElementById"],"mappings":"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","file":"static/js/main.708a17af.chunk.js","sourcesContent":["import {\n  ADD_TO_CART,\n  CHECKOUT_REQUEST,\n  CHECKOUT_FAILURE,\n  REMOVE_FROM_CART,\n  CHANGE_QTY\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  addedIds: [],\n  quantityById: {}\n}\n\nconst addedIds = (state = initialState.addedIds, action) => {\n  const { productId } = action\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (state.indexOf(action.productId) !== -1) {\n        return state\n      }\n      return [ ...state, action.productId ]\n      case REMOVE_FROM_CART:\n      return state.filter((id) => {\n        console.log(state, productId)\n        return id !== productId\n      })\n    default:\n      return state\n  }\n}\n\nconst quantityById = (state = initialState.quantityById, action) => {\n  const { productId } = action\n  switch (action.type) {\n    case ADD_TO_CART:      \n      return { ...state,\n        [productId]: (state[productId] || 0) + 1\n      }\n      case REMOVE_FROM_CART:\n      return {...state,\n        [productId]: 0\n      }\n      case CHANGE_QTY:\n      return {...state,\n        [productId]: state[productId] + action.qtyDiff\n      }\n    default:\n      return state\n  }\n}\n\nexport const getQuantity = (state, productId) =>\n  state.quantityById[productId] || 0\n\nexport const getAddedIds = state => state.addedIds\n\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECKOUT_REQUEST:\n      return initialState\n    case CHECKOUT_FAILURE:\n      return action.cart\n    default:\n      return {\n        addedIds: addedIds(state.addedIds, action),\n        quantityById: quantityById(state.quantityById, action)\n      }\n  }\n}\n\nexport default cart\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\nexport const CHANGE_QTY = 'CHANGE_QTY'\n","import { combineReducers } from 'redux'\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        inventory: state.inventory - 1\n      }\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        ...action.products.reduce((obj, product) => {\n          obj[product.id] = product\n          return obj\n        }, {})\n      }\n    default:\n      const { productId } = action\n      if (productId) {\n        return {\n          ...state,\n          [productId]: products(state[productId], action)\n        }\n      }\n      return state\n  }\n}\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  visibleIds\n})\n\nexport const getProduct = (state, id) =>\n  state.byId[id]\n\nexport const getVisibleProducts = state =>\n  state.visibleIds.map(id => getProduct(state, id))\n","import { combineReducers } from 'redux'\nimport cart, * as fromCart from './cart'\nimport products, * as fromProducts from './products'\n\nexport default combineReducers({\n  cart,\n  products\n})\n\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\n\nexport const getTotal = state =>\n  getAddedIds(state)\n    .reduce((total, id) =>    \n      total + getProduct(state, id).price * getQuantity(state, id),\n      0\n    )\n    .toFixed(2)\n\nexport const getCartProducts = state =>\n  getAddedIds(state).map(id => ({\n    ...getProduct(state, id),\n    quantity: getQuantity(state, id)\n  }))\n","/**\n * Mocking client-server processing\n */\nimport _products from './products.json'\n\nconst TIMEOUT = 100\n\nexport default {\n  getProducts: (cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT),\n  buyProducts: (payload, cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT)\n}\n","import shop from '../api/shop'\nimport * as types from '../constants/ActionTypes'\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n})\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products))\n  })\n}\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n})\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId))\n  }\n}\n\nexport const checkout = products => (dispatch, getState) => {\n  const { cart } = getState()\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  })\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    })\n    // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  })\n}\n\nconst removeFromCartAction = (productId, qty) => ({\n  type: types.REMOVE_FROM_CART,\n  productId,\n  qty\n})\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch(removeFromCartAction(productId, getState().cart.quantityById[productId]))\n}\n\nexport const changeQty = (productId, qty) => (dispatch, getState) => {\n  const qtyDiff = qty - getState().cart.quantityById[productId]\n  dispatch({\n    type: types.CHANGE_QTY,\n    productId,\n    qtyDiff\n  })\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Badge from \"@material-ui/core/Badge\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from \"@material-ui/core/Container\";\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport {getCartProducts } from './../reducers'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            paddingBottom: '10px',\n        },\n        title: {\n            flexGrow: 1\n        },\n        titleLink: {\n            color: '#fff',\n            textDecoration: 'none'\n        },\n        appbar: {\n            position: \"fixed\",\n            background: \"#282c34\"\n        }\n    })\n\n);\n\nconst Header = ({products}) => {\n    const classes = useStyles();\nconsole.log(\"product in header \",products);\n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.appbar} >\n                <Container>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            <Link to=\"/\" className={classes.titleLink}>Proxelo</Link>\n                        </Typography>\n                        <div>\n                            <IconButton\n                                color=\"inherit\"\n                                component={Link}\n                                to=\"/cart\">\n                                <Badge badgeContent={products.length} color=\"secondary\">\n                                    <ShoppingBasketIcon />\n                                </Badge>\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    products: getCartProducts(state)\n  })\n  \nexport default connect(mapStateToProps)(Header);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './Product.css'\n\nexport default function Product({ title, price, image, description, category, quantitydatadata }) {\n\n  return (\n    <div className=\"detailsM\">\n      <div className=\"details\">\n        <CardMedia\n          className=\"media\"\n          image={image}\n          title=\"\"\n        />\n      </div>\n      <div className=\"details\">\n        <CardContent className=\"content\" >\n          <Typography component=\"h6\" variant=\"h6\">\n            {title}\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              <b>Desc :{description} </b><br />\n              <b>Quantity : {quantitydatadata}</b><br />\n              <b>Price : {price}</b><br/>\n                           \n            </Typography>\n          </Typography>\n        </CardContent>\n      </div>\n    </div>\n  )\n}\n\nProduct.propTypes = {\n  price: PropTypes.number,\n  quantity: PropTypes.number,\n  title: PropTypes.string\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport \"./Product.css\";\n\nexport default function ProductItem({ product, onAddToCartClicked }) {\n  return (\n  <Card className=\"card\">\n    <Product\n      title={product.title}\n      price={product.price}\n      image={product.image}\n      description={product.description}\n      category={product.category}\n      inventory={product.inventory} \n      quantitydatadata={product.quantitydatadata}     \n    />\n    {/* <button\n      onClick={onAddToCartClicked}\n      disabled={product.inventory > 0 ? '' : 'disabled'}>\n      {product.inventory > 0 ? 'Add to cart' : 'Sold Out'}\n    </button> */}\n    <IconButton aria-label=\"Add\" >\n      <AddShoppingCartIcon className=\"cartIcon\" onClick={onAddToCartClicked} />\n    </IconButton>\n\n  </Card>\n  )\n}\n\nProductItem.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  }).isRequired,\n  onAddToCartClicked: PropTypes.func.isRequired\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Product.css'\n\nconst ProductsList = ({ title, children }) => (\n  <div >\n    <h3>{title}</h3>\n    <div>{children}</div>\n  </div>\n)\n\nProductsList.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired\n}\n\nexport default ProductsList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addToCart } from '../actions'\nimport { getVisibleProducts } from '../reducers/products'\nimport ProductItem from '../components/ProductItem'\nimport ProductsList from '../components/ProductsList'\nimport './home.css'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\n\nconst ProductsContainer = ({ products, addToCart }) => (\n  <Grid item xs={12} className=\"gridAlt\">    \n      {products.map((product) => {\n        return (\n          <ProductItem\n            key={product.id}\n            product={product}\n            onAddToCartClicked={() => addToCart(product.id)} />\n        )\n      }\n      )}\n  </Grid>\n\n)\n\nProductsContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  })).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  products: getVisibleProducts(state.products)\n})\n\nexport default connect(\n  mapStateToProps,\n  { addToCart }\n)(ProductsContainer)\n","import React from 'react'\r\nimport ProductsContainer from './../ProductsContainer'\r\nimport './home.css';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HomePage = () => (\r\n  <Grid container spacing={1} className=\"gridAlt\">\r\n    <div classname=\"categoryBtn\">\r\n      <Link to='/'>\r\n        <Button variant=\"outlined\" >All</Button>\r\n      </Link>\r\n      <Link to='/vegetable'>\r\n        <Button variant=\"outlined\" color=\"primary\" >Vegitables</Button>\r\n      </Link>\r\n      <Link to='/fruits'>\r\n        <Button variant=\"outlined\" color=\"secondary\" >Fruits</Button>\r\n      </Link>\r\n    </div>\r\n    <Grid container item xs={12} className=\"gridAlt1\">\r\n      <ProductsContainer />\r\n    </Grid>\r\n  </Grid>\r\n)\r\n\r\nexport default HomePage\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ProductCart from './ProductCart'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from \"@material-ui/core/Container\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    \n  },\n  footerbar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  title: {\n    flexGrow: 1,\n    align: \"right\"\n  },\n  cartCard: {\n    paddingTop:'10%',\n  },\n  cartroot:{\n    paddingTop:'10%',\n  }\n});\n\n\nconst Cart = ({ products, total, onCheckoutClicked, removeFromCart,changeQty }) => {\nconsole.log(\"cart Data \",products);\n  const classes = useStyles();\n\n  if (products.length === 0) return <div className={classes.cartroot}><p>Please add some products to cart.</p></div>;\n    return (\n        <div className={classes.cartroot}>\n            <Paper className={classes.root}>\n                <Table stickyHeader aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell >Title</TableCell>\n                            <TableCell >Price</TableCell>\n                            <TableCell >Count</TableCell>\n                            <TableCell >Total</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {products.map((product, index) => (\n                            <TableRow key={product.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {product.title}<br />\n                                    ({product.quantitydata})<br />\n                                    (₹ {product.price})\n                                </TableCell>                                \n                                <TableCell >\n                                    <ButtonGroup\n                                        orientation=\"vertical\"\n                                        aria-label=\"vertical outlined primary button group\">\n                                        <Button onClick={() => changeQty(product.id, product.quantity+1)}>+</Button>\n                                        <Button onClick={() => changeQty(product.id, product.quantity-1)}>-</Button>\n                                        <Button onClick={() => removeFromCart(product.id)}>All</Button>\n                                    </ButtonGroup>\n                                </TableCell>\n                                <TableCell >{product.quantity} * ₹{product.price}</TableCell>\n                                <TableCell >₹{product.quantity * product.price}</TableCell>\n                                {/* <ButtonGroup\n                                    orientation=\"vertical\"\n                                    aria-label=\"vertical outlined primary button group\">\n                                    <Button onClick={() => remoteItemFromCart(items.get('id'))}>AllRemove</Button>\n                                </ButtonGroup> */}\n                            </TableRow>\n                        ))}\n                        <TableRow>\n                            <TableCell colSpan={3} align=\"right\">Sub Total</TableCell>\n                            <TableCell align=\"right\">₹{total}</TableCell>\n                            <TableCell />\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </Paper>\n            <div className={classes.root}>\n        <AppBar className={classes.footerbar} color=\"#282c34\">\n          <Container>\n            <Toolbar>\n              <Typography variant=\"h6\" className={classes.title}>\n                <p>Total : ₹{total} </p>\n              </Typography>\n              <div>\n                <Typography variant=\"h6\" className={classes.title}>\n                  <Button variant=\"contained\" color=\"primary\" href=\"/checkout\">\n                    Checkout\n                  </Button>\n                </Typography>\n              </div>\n            </Toolbar>\n          </Container>\n        </AppBar>\n      </div>\n        </div>\n    )\n}\n\nCart.propTypes = {\n  products: PropTypes.array,\n  total: PropTypes.string,\n  removeFromCart: PropTypes.func.isRequired,\n  onCheckoutClicked: PropTypes.func,\n  changeQty: PropTypes.func.isRequired,\n}\n\nexport default Cart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { checkout,removeFromCart,changeQty } from '../actions'\nimport { getTotal, getCartProducts } from '../reducers'\nimport Cart from '../components/Cart'\n\nconst CartContainer = ({ products, total, checkout,removeFromCart,changeQty}) => (\n  <Cart\n    products={products}\n    total={total}\n    removeFromCart={(productId) =>removeFromCart(productId)}\n    onCheckoutClicked={() => checkout(products)} \n    changeQty={(productId, val) => changeQty(productId, val)}\n    />\n)\n\nCartContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  total: PropTypes.string,\n  checkout: PropTypes.func.isRequired,\n  removeFromCart: PropTypes.func.isRequired,\n  changeQty: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  products: getCartProducts(state),\n  total: getTotal(state)\n})\n\nexport default connect(\n  mapStateToProps,\n  { checkout,removeFromCart, changeQty }\n)(CartContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addToCart } from '../actions'\nimport { getVisibleProducts } from '../reducers/products'\nimport ProductItem from '../components/ProductItem'\nimport ProductsList from '../components/ProductsList'\nimport './home.css'\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\n\nconst ProductsContainerFruits = ({ products, addToCart }) => (\n\n  <Grid item xs={12} className=\"gridAlt\">\n    {products.map((product) => {\n      if (product.category === 'fruits') {\n        return (\n          <ProductItem\n            key={product.id}\n            product={product}\n            onAddToCartClicked={() => addToCart(product.id)} />\n        )\n      }\n    }\n    )}\n  </Grid>\n\n)\n\nProductsContainerFruits.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  })).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  products: getVisibleProducts(state.products)\n})\n\nexport default connect(\n  mapStateToProps,\n  { addToCart }\n)(ProductsContainerFruits)\n","import React from 'react'\r\nimport ProductsContainerFruits from './../ProductsContainerFruits'\r\nimport './home.css';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HomePageFruit = () => (\r\n  <Grid container spacing={1} className=\"gridAlt\">\r\n    <div classname=\"categoryBtn\">\r\n      <Link to='/'>\r\n        <Button variant=\"outlined\" >All</Button>\r\n      </Link>\r\n      <Link to='/vegetable'>\r\n        <Button variant=\"outlined\" color=\"primary\" >Vegitables</Button>\r\n      </Link>\r\n      <Link to='/fruits'>\r\n        <Button variant=\"outlined\" color=\"secondary\" >Fruits</Button>\r\n      </Link>\r\n    </div>\r\n    <Grid container item xs={12} className=\"gridAlt1\">\r\n      <ProductsContainerFruits />\r\n    </Grid>\r\n  </Grid>\r\n)\r\n\r\nexport default HomePageFruit\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function AddressForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            validators={['required', 'isEmail']}\r\n            errorMessages={['this field is required', 'email is not valid']}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            helperText=\"Incorrect entry.\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"Use this address for payment details\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function PaymentForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"cardName\" label=\"Name on card\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"cardNumber\" label=\"Card number\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            helperText=\"Last three digits on signature strip\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n            label=\"Remember credit card details for next time\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst products = [\r\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\r\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\r\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\r\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\r\n  { name: 'Shipping', desc: '', price: 'Free' },\r\n];\r\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\nconst payments = [\r\n  { name: 'Card type', detail: 'Visa' },\r\n  { name: 'Card holder', detail: 'Mr John Smith' },\r\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n  { name: 'Expiry date', detail: '04/2024' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Review() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {products.map((product) => (\r\n          <ListItem className={classes.listItem} key={product.name}>\r\n            <ListItemText primary={product.name} secondary={product.desc} />\r\n            <Typography variant=\"body2\">{product.price}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            $34.06\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>John Smith</Typography>\r\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport PropTypes from 'prop-types'\r\nimport Product from './../Product'\r\nimport { checkout } from './../../actions'\r\nimport { connect } from 'react-redux'\r\nimport { getCartProducts } from './../../reducers'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <PaymentForm />;\r\n    case 2:\r\n      return <Review />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\n//export default function Checkout() {\r\nconst Checkout = ({ items, checkout, onCheckoutClicked,products }) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n    if (activeStep === 2) {\r\n      checkout(products)\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order confirmation, and will\r\n                  send you an update when your order has shipped.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                  {getStepContent(activeStep)}\r\n                  <div className={classes.buttons}>\r\n                    {activeStep !== 0 && (\r\n                      <Button onClick={handleBack} className={classes.button}>\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                    </Button>\r\n\r\n\r\n                  </div>\r\n                </React.Fragment>\r\n              )}           \r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\nCheckout.propTypes = {\r\n  products: PropTypes.array,\r\n  onCheckoutClicked: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: getCartProducts(state)\r\n})\r\nexport default connect(\r\n  mapStateToProps,\r\n  { checkout }\r\n)(Checkout)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addToCart } from './../actions'\nimport { getVisibleProducts } from './../reducers/products'\nimport ProductItem from './../components/ProductItem'\nimport './home.css'\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ProductsContainerVegetable = ({ products, addToCart }) => (\n  <Grid item xs={12} className=\"gridAlt\">         \n      {products.map((product) => {\n        if (product.category === 'vegetables') {\n          return (\n            <ProductItem\n              key={product.id}\n              product={product}\n              onAddToCartClicked={() => addToCart(product.id)} />\n          )\n        }\n      }\n      )}\n  </Grid>\n)\nProductsContainerVegetable.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  })).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n  products: getVisibleProducts(state.products)\n})\nexport default connect(\n  mapStateToProps,\n  { addToCart }\n)(ProductsContainerVegetable)\n","import React from 'react'\r\nimport ProductsContainerVegetable from './../ProductsContainerVegetable'\r\nimport './home.css';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst HomePageVegetable = () => (\r\n  <Grid container spacing={1} className=\"gridAlt\">\r\n    <div classname=\"categoryBtn\">\r\n      <Link to='/'>\r\n        <Button variant=\"outlined\"  color=\"primary\" >All</Button>\r\n      </Link>\r\n      <Link to='/vegetable'>\r\n        <Button variant=\"outlined\" color=\"primary\" >Vegitables</Button>\r\n      </Link>\r\n      <Link to='/fruits'>\r\n        <Button variant=\"outlined\" color=\"primary\" >Fruits</Button>\r\n      </Link>\r\n    </div>    \r\n    <Grid container item xs={12} className=\"gridAlt1\">\r\n      <ProductsContainerVegetable />\r\n    </Grid>\r\n  </Grid>\r\n)\r\n\r\nexport default HomePageVegetable\r\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './../reducers'\nimport { getAllProducts } from './../actions'\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './../components/Header';\nimport Container from '@material-ui/core/Container';\nimport HomePage from './HomePage/HomePage'\nimport CartPage from './CartContainer'\nimport HomePageFruit from './HomePage/HomePageFruit'\nimport Checkout from './../components/checkout/Checkout'\nimport HomePageVegetable from './HomePage/HomePageVegetable'\nimport './home.css'\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\nconst store = createStore(\n  reducer,\n  persistedState,\n  applyMiddleware(...middleware)\n)\n\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nstore.dispatch(getAllProducts())\n\nconst App = () => (\n  <Provider store={store}>\n    <ThemeProvider >\n      <CssBaseline />\n      <Router>\n        <Header />\n        <Container>\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />            \n            <Route path=\"/vegetable\" component={HomePageVegetable} />\n            <Route path=\"/fruits\" component={HomePageFruit} />            \n            <Route path=\"/cart\" component={CartPage} />\n            <Route path=\"/checkout\" component={Checkout} />\n          </Switch>\n        </Container>\n\n      </Router>\n    </ThemeProvider>\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './containers/App'\n\nrender(<App />,document.getElementById('root')\n)\n"],"sourceRoot":""}